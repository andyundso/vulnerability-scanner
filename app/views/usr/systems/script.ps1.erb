$api_key = "<%= @system.current_api_key %>"
$id = <%= @system.id %>

$body = @{}
$body.Add('api_token', $api_key)

$system_information = Get-WmiObject -Class Win32_ComputerSystem

$system = @{}

$system.Add('id', $id)
$system.Add('name', ($system_information | Select-Object -ExpandProperty 'Name'))
$system.Add('manufacturer', ($system_information | Select-Object -ExpandProperty 'Manufacturer'))
$system.Add('model', ($system_information | Select-Object -ExpandProperty 'Model'))
$memory = $system_information | Select-Object -ExpandProperty 'TotalPhysicalMemory'
$system.Add('memory', ([int]$memory / (1024 * 1024)))

$body.Add('systems', $system)

$installedSoftware = "HKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall", "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"
$softwareregistry = New-Object System.Collections.Generic.List[System.Object]
$software = New-Object System.Collections.ArrayList

foreach ($place in $installedSoftware) {
  $folders = Get-ChildItem $place | Select-Object -ExpandProperty Name
  foreach ($folder in $folders) {
  $temp = Get-ItemProperty "Registry::$folder\"
  $displayname = $temp | Select-Object -ExpandProperty "DisplayName"

  if ($displayname -And (-Not ($software | Where-Object {$_.DisplayName -Like $displayname}))) {
    $arr = @{}
    $arr.Add('Publisher', ($temp | Select-Object -ExpandProperty "Publisher"))
    $arr.Add('Version', ($temp | Select-Object -ExpandProperty "DisplayVersion"))
    $arr.Add('DisplayName', ($temp | Select-Object -ExpandProperty "DisplayName"))
    $arr.Add('InstallDate', ($temp | Select-Object -ExpandProperty "InstallDate"))
    $arr.Add('URLInfoAbout', ($temp | Select-Object -ExpandProperty "URLInfoAbout"))
    $software.Add($arr)
    }
  }
}

$body.Add('software', $software)

Invoke-RestMethod -Method Put -Uri <%= api_system_url(@system) %> -Body (ConvertTo-Json $body)